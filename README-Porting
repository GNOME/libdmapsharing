Version 4.0 of the libdmapsharing API is incompatible with previous
versions. The primary reason for these changes is to better support
GObject introspection and thus languages such as Python. The following
are the key differences between the new and old APIs:

(1)  A program which shares a DMAP service must explicitly call
dmap_share_serve() and dmap_share_publish().

(2)  All symbols now exist in the DMAP/Dmap/dmap namespace.

	(a) For example, DMAPDb is now DmapDb.

	(b) DMAP_DB remains DMAP_DB.

	(c) dmap_db... remains dmap_db...

	(d) DAAPRecord is now DmapAvRecord.

	(d) DPAPRecord is now DmapImageRecord.

	(e) DACPPlayer is now DmapControlPlayer.

(3)  The interface names exported by libdmapsharing now end in "Interface"
instead of "Iface".

(4)  The new API renames the following symbols as indicated:

	DMAP_TYPE_DMAP_MDNS_BROWSER_TRANSPORT_PROTOCOL became
	DMAP_TYPE_DMAP_MDNS_SERVICE_TRANSPORT_PROTOCOL.

	DMAPMdnsBrowserTransportProtocol became DMAPMdnsServiceTransportProtocol.

	DMAPMdnsBrowserServiceType became DMAPMdnsServiceType.

	DMAPMdnsBrowserService became DMAPMdnsService.

	DMAPConnectionCallback became DMAPConnectionFunc.

	DMAP_MDNS_BROWSER_TRANSPORT_PROTOCOL* became DMAP_MDNS_SERVICE_TRANSPORT_PROTOCOL*.

	DMAP_MDNS_BROWSER_SERVICE_TYPE_* became DMAP_MDNS_SERVICE_TYPE_*.

	dmap_connection_connect became dmap_connection_start.

	The dmap_hash functions became dmap_md5 functions.

	DACP_PLAY_STOPPED and so on became, for example, CONTROL_PLAY_STOPPED.

	DACPRepeatState became DmapControlRepeatState.

	DACPPlayState became DmapControlPlayState.

(5)  The new API replaces the use of GHFunc with DmapIdRecordFunc and
DmapContainerIdFunc.

(6)  Setting an object property using g_object_set causes the object to
duplicate the passed value.  Thus the caller maintains control of the
original value.

(7)  Getting an object property using g_object_set returns a duplicate
of the value. Thus the caller should free or unref the obtained value.

(8)  The "hash" property in the DAAPRecord interface and the "hash"
and "thumbnail" properties in the DPAPRecord interface are now boxed
types.  The true type of each of these properties is a GArray. Thus
implementations of these interfaces should now:

	(a) use x = g_value_get_boxed(value) in their setter,

	(b) use g_value_set_boxed(value, x) in their getter, and

	(c) use GArray instead of GByteArray.

(9)  The "base-uri" property in the DmapConnection class is now a boxed
type. The real type is SoupURI.

(10) The "db" and "container-db" properties in DmapShare are now handled
as object types instead of pointer types.

(11) The properties contained in a DmapMdnsService must now be accessed
using g_object_get.

(12) The following methods now take a GError ** as their last argument:

	(a) dmap_record_factory_create().

	(b) dmap_db_add(), dmap_db_add_with_id(), and dmap_db_add_path().

	(c) dmap_share_serve().

	(d) dmap_share_publish().

	(e) dmap_container_record_add_entry().
